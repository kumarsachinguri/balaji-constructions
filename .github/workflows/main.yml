# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json
    - run: |
          cd ui
          npm install
          npm run build

    - name: FTP Deploy
      # You may pin to the exact commit or the version.
      # uses: SamKirkland/FTP-Deploy-Action@8e83cea8672e3fbcbb9fdafff34debf6ae4c5f65
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
         # ftp server
         server: ${{ secrets.BALAJI_CONSTRUCTIONS_SERVERNAME }}
         # ftp username
         username: ${{ secrets.BALAJI_CONSTRUCTIONS_USERNAME }}
         # ftp password
         password: ${{ secrets.BALAJI_CONSTRUCTIONS_PASSWORD }}
         # Server port to connect to (read your web hosts docs)
         # port: # optional
         # protocol to deploy with - ftp, ftps, or ftps-legacy
         # protocol: # optional
         # Folder to upload from, must end with trailing slash /
         # local-dir: /ui/dist/balaji-constructions/browser/
         # Path to upload to on the server. Must end with trailing slash /
         server-dir: /balajiconstructions.org.in/
         # Path and name of the state file - this file is used to track which files have been deployed
         # state-name: # optional
         # Prints which modifications will be made with current config options, but doesnt actually make any changes
         # dry-run: # optional
         # Deletes ALL contents of server-dir, even items in excluded with exclude argument
         # dangerous-clean-slate: # optional
         # An array of glob patterns, these files will not be included in the publish/delete process
         # exclude: # optional
         # How verbose should the information be - minimal, standard, or verbose
         # log-level: # optional
         # strict or loose
         # security: # optional
         # Timeout in milliseconds for FTP operations
         # timeout: # optional
              
